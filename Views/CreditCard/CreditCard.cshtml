@using KursovaWorkBLL.Services.AdditionalServices;

@{
    ViewBag.Title = "Метод оплати";
    ViewBagHelper.SetIsLoggedInInViewBag(ViewContext);
}
@model CreditCardViewModel

<div class="creditCard-section">
    <h2 class="yourpayments-header">Мої методи оплати.</h2>
    <div class="creditCardContainer">
        <p class="creditCardHeader">Тут ти можеш добавити методи оплати та керувати ними.</p>
        <div id="customIdentify-container"></div>
        <div class="payment-data">
            <p class="creditCardListHeader">Моя банкова карта.</p>
            <div class="paymentAccountList">
                <div class="creditCardAdd" style="display: block;">
                    <button class="btn btn-primary btn-block text-decoration-none fw-bold" id="addCreditCardLink">
                        <i class="fas fa-plus me-1"></i>Додати кредитну карту
                    </button>
                </div>
                <div class="creditCard" id="creditCard" style="display: none;">
                    <div class="card">
                        <div class="card-front">
                            <h2 class="card-title">Кредитна карта:</h2>

                            <div class="card-number">@ViewBag.CardNumber</div>
                            <div class="card-holder">@ViewBag.CardHolderName</div>
                            <div class="card-expiry">
                                <div class="card-expiry-label">Діє до</div>
                                <div class="card-expiry-value">@ViewBag.Month / @ViewBag.Year</div>
                            </div>
                        </div>
                    </div>
                    <a class="btn btn-primary btn-block text-decoration-none fw-bold mt-2" id="deleteCreditCardLink">
                        <i class="fas fa-trash"></i>Відв'язати кредитну карту
                    </a>
                </div>
                <div id="creditCardForm" style="display: none;">


                    @using (Html.BeginForm("CreditCard", "CreditCard", FormMethod.Post, new { id = "creditCardFormAjax" })) 
                    {
                        @Html.AntiForgeryToken();

                        <div class="form-group mb-3">
                            <label class="fs-6" for="fullName">Ім'я та прізвище:</label>
                            @Html.TextBoxFor(model => model.CardHolderName, new { @class = "form-control-custom" })
                            <span class="text-danger" id="CardHolderNameError"></span> 
                        </div>

                        <div class="form-group mb-3">
                            <label class="fs-6" for="cardNumber">Номер карти:</label>
                            @Html.TextBoxFor(model => model.CardNumber, new { @class = "form-control-custom" })
                            <span class="text-danger" id="CardNumberError"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label class="fs-6" for="expirationMonth">Термін дії (місяць):</label>
                            @Html.TextBoxFor(model => model.ExpirationMonth, new { @class = "form-control-custom" })
                            <span class="text-danger" id="ExpirationMonthError"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label class="fs-6" for="expirationYear">Термін дії (рік):</label>
                            @Html.TextBoxFor(model => model.ExpirationYear, new { @class = "form-control-custom" })
                            <span class="text-danger" id="ExpirationYearError"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label class="fs-6" for="cvc">Код безпеки CVC:</label>
                            @Html.TextBoxFor(model => model.CVV, new { @class = "form-control-custom" })
                            <span class="text-danger" id="CVVError"></span>
                        </div>

                        <button type="submit" class="btn btn-primary" id="saveButton">Зберегти</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var addCreditCardLink = document.getElementById("addCreditCardLink");
    var deleteCreditCardLink = document.getElementById("deleteCreditCardLink");
    var creditCardForm = document.getElementById("creditCardForm");

    document.addEventListener("DOMContentLoaded", function () {
        addCreditCardLink.addEventListener("click", function () {
            addCreditCardLink.style.display = "none";
            creditCardForm.style.display = "block";
        });

        deleteCreditCardLink.addEventListener("click", function () {
            deleteCreditCard();
        });

        document.getElementById("saveButton").addEventListener("click", function (event) {
            event.preventDefault(); 
            saveCreditCard();
        });
    });

    if ("@ViewBag.Input" === "True") {
        addCreditCardLink.style.display = "none";
        creditCardForm.style.display = "block";
    }

    if ("@ViewBag.Card" === "True") {
        addCreditCardLink.style.display = "none";
        creditCardForm.style.display = "none";
        document.getElementById('creditCard').style.display = "block";
    }

    function deleteCreditCard() {

        fetch("@Url.Action("DeleteCreditCard", "CreditCard")")
            .then(response => response.text())
            .then(data => {
                addCreditCardLink.style.display = "block";
                creditCardForm.style.display = "none";
                document.getElementById('creditCard').style.display = "none";
            })
            .catch(error => console.log(error));
    }

    function saveCreditCard() {
        var form = document.getElementById("creditCardFormAjax");
        var formData = new FormData(form);


        fetch(form.action, {
            method: form.method,
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Форма успішно підтверджена
                    // Обновляємо дані на сторінці
                    addCreditCardLink.style.display = "none";
                    creditCardForm.style.display = "none";
                    document.getElementById('creditCard').style.display = "block";

                    const cardNumber = document.getElementById("CardNumber").value;
                    const lastFourDigits = cardNumber.substring(cardNumber.length - 4);

                    document.querySelector(".card-number").innerHTML = "···· ···· ···· " + lastFourDigits;
                    document.querySelector(".card-holder").innerHTML = document.getElementById("CardHolderName").value;
                    document.querySelector(".card-expiry-value").innerHTML = document.getElementById("ExpirationMonth").value + " / " + document.getElementById("ExpirationYear").value;

                    document.getElementById("CardHolderName").value = "";
                    document.getElementById("CardNumber").value = "";
                    document.getElementById("ExpirationMonth").value = "";
                    document.getElementById("ExpirationYear").value = "";
                    document.getElementById("CVV").value = "";

                    document.getElementById("CardHolderNameError").innerText = "";
                    document.getElementById("CardNumberError").innerText = "";
                    document.getElementById("ExpirationMonthError").innerText = "";
                    document.getElementById("ExpirationYearError").innerText = "";
                    document.getElementById("CVVError").innerText = "";
                } else {

                    if (data.errors) {
                        Object.keys(data.errors).forEach(function (key) {
                            if (key !== "") {

                                let element = key.charAt(0).toUpperCase() + key.slice(1) + "Error";
                                if (key === "cvv") {
                                    element = key.toUpperCase() + "Error";
                                }

                                document.getElementById(element).innerText = data.errors[key];
                            }

                        });
                    }
                }
            })
            .catch(error => console.log(error));
    }
</script>

@Html.Partial("_Footer")
